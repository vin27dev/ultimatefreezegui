/*
 * This file is part of UltimateFreezeGUI, licensed under the MIT License.
 *
 *  Copyright (c) vin27dev (Luck) <vin27dev@gmail.com>
 *  Copyright (c) contributors
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

package it.vin27dev.ultimatefreezegui.utility;

import it.vin27dev.ultimatefreezegui.UltimateFreezeGUI;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.List;

public class GUI {

    private UltimateFreezeGUI ultimateFreezeGUI;

    public GUI(UltimateFreezeGUI ultimateFreezeGUI) {
        this.ultimateFreezeGUI = ultimateFreezeGUI;
    }

    public void setupInventory(Player player) {
        Inventory inventory = ultimateFreezeGUI.getServer().createInventory(null,
                ultimateFreezeGUI.getConfig().getInt("GUI.inv-size"),
                ChatUtility.color(ultimateFreezeGUI.getConfig().getString("GUI.inv-name")));

        List<String> itemLore1 = ultimateFreezeGUI.getConfig().getStringList("GUI.contact-item-lore");
        List<String> itemLore2 = ultimateFreezeGUI.getConfig().getStringList("GUI.contact-item-lore2");
        List<String> itemLore3 = ultimateFreezeGUI.getConfig().getStringList("GUI.admit-item-lore");

        for (int i = 0; i < itemLore1.size(); i++) {
            itemLore1.set(i, ChatColor.translateAlternateColorCodes('&', itemLore1.get(i)));
        }

        for (int i = 0; i < itemLore2.size(); i++) {
            itemLore2.set(i, ChatColor.translateAlternateColorCodes('&', itemLore2.get(i)));
        }

        for (int i = 0; i < itemLore3.size(); i++) {
            itemLore3.set(i, ChatColor.translateAlternateColorCodes('&', itemLore3.get(i)));
        }

        inventory.setItem(ultimateFreezeGUI.getConfig().getInt("GUI.contact-item-slot"),
                itemBuilder(ChatUtility.color(ultimateFreezeGUI.getConfig().getString("GUI.contact-item-name")),
                        Material.valueOf(ultimateFreezeGUI.getConfig().getString("GUI.contact-item-material")),
                        itemLore1));

        inventory.setItem(ultimateFreezeGUI.getConfig().getInt("GUI.contact-item-slot2"),
                itemBuilder(ChatUtility.color(ultimateFreezeGUI.getConfig().getString("GUI.contact-item-name2")),
                        Material.valueOf(ultimateFreezeGUI.getConfig().getString("GUI.contact-item-material2")),
                        itemLore2));

        inventory.setItem(ultimateFreezeGUI.getConfig().getInt("GUI.admit-item-slot"),
                itemBuilder(ChatUtility.color(ultimateFreezeGUI.getConfig().getString("GUI.admit-item-name")),
                        Material.valueOf(ultimateFreezeGUI.getConfig().getString("GUI.admit-item-material")),
                        itemLore3));

        player.openInventory(inventory);
    }

    private ItemStack itemBuilder(String name, Material material, List<String> lore) {
        ItemStack itemStack = new ItemStack(material, 1);
        ItemMeta itemMeta = itemStack.getItemMeta();

        itemMeta.setDisplayName(name);
        itemMeta.setLore(lore);

        itemStack.setItemMeta(itemMeta);

        return itemStack;
    }
}
